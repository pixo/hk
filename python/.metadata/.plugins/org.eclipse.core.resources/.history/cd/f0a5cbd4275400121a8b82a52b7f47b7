#!/usr/bin/env python
import couchdb
import argparse
import os,time
import lsShots

def createShot(project, sequence, name, description, cut_in, cut_out, db):
    """string projectName, string shotName, string description, int cut_in, int cut_out, couch.db.Server db"""
    project_id = "project_%s" % project
    project_doc = db[project_id]
    shots = project_doc.setdefault("shots", {}) 
    shotslist = lsShots.lsShots(db, project)
    
    if not (name in shotslist) :
        shot_doc = {
            "type": "shot",
            "_id": "%s_shot_%s" % (project_doc["_id"], name),
            "name": name,
            "project_id": project_id,
            "description": description,
            "cut_in": cut_in,
            "cut_out":cut_out,
            "creator": os.getenv("USER"),
            "created": time.strftime("%Y %b %d %H:%M:%S", time.gmtime())
        }
        
        _id, _rev = db.save(shot_doc)
        print "Added shot %r to project %r" % (name, project)
    else:
        print "Shot %s already exist" % name 
    
if __name__ == '__main__':#terminal
    dbname = "db1"
    user = "admin:admin"
    server = couchdb.Server("http://%s@127.0.0.1:5984" % user)
    if dbname in server:
        db = server[dbname]
        parser = argparse.ArgumentParser()
        parser.add_argument("project", help="name of the project")
        parser.add_argument("sequence", help="name of the sequence")
        parser.add_argument("name", help="name of the shot to create")
        parser.add_argument("description", help="description of the shot")
        parser.add_argument("cut_in", type=int, help="First frame")
        parser.add_argument("cut_out", type=int, help="Last frame")
        args = parser.parse_args()
        createShot(args.project, args.name, args.description, args.cut_in, args.cut_out, db)
    else :
        print """Database "%s" doesn't exist""" % dbname
