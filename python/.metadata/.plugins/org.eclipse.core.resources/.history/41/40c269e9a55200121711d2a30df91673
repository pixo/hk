#!/usr/bin/env python

import couchdb
import argparse

dbname="db1"
user="admin:admin"
server = couchdb.Server("http://%s@127.0.0.1:5984" % user)



def createShot(db, project, name, description, cut_in,cut_out):
    project_id = "project_%s" % project
    project_doc = db[project_id]
    shots = project_doc.setdefault("shots", {})
    shot_doc = {
        "type": "shot",
        "_id": "%s_shot_%s" % (project_doc["_id"], name),
        "name": name,
        "project_id": project_id,
        "description": description,
        "cut_in": cut_in,
        "cut_out":cut_out
    }
    _id, _rev = db.save(shot_doc)
    print "Added shot %r to project %r" % (args.name, args.project)

if dbname in server:
    db = server[dbname]
    parser = argparse.ArgumentParser()
    parser.add_argument("project", help="name of the project to create")
    parser.add_argument("name", help="name of the shot to create")
    parser.add_argument("description", help="description of the shot")
    parser.add_argument("cut_in", type=int, help="description of the shot")
    parser.add_argument("cut_out", type=int, help="description of the shot")
    args = parser.parse_args()
    
    project_id = "project_%s" % args.project
    project_doc = db[project_id]
    shots = project_doc.setdefault("shots", {})
    shot_doc = {
        "type": "shot",
        "_id": "%s_shot_%s" % (project_doc["_id"], args.name),
        "name": args.name,
        "project_id": project_id,
        "description": args.description,
        "cut_in": args.cut_in,
        "cut_out": args.cut_out
    }
    _id, _rev = db.save(shot_doc)
    print "Added shot %r to project %r" % (args.name, args.project)
    
    createShot(db, args.project, args.name, args.description, args.cut_in, args.cut_out)

else :
    print """Database "%s" doesn't exist""" % dbname
    
if __name__ == '__main__':#terminal
    dbname="db1"
    user="admin:admin"
    server = couchdb.Server("http://%s@127.0.0.1:5984" % user)
    
    if dbname in server:
        db = server[dbname]
        parser = argparse.ArgumentParser()
        parser.add_argument("project", help="name of the project to create")
        parser.add_argument("name", help="name of the shot to create")
        parser.add_argument("description", help="description of the shot")
        parser.add_argument("cut_in", type=int, help="description of the shot")
        parser.add_argument("cut_out", type=int, help="description of the shot")
        args = parser.parse_args()
        projectName = args.name
        
        try :
            createProject(projectName,db)
    
        except couchdb.ResourceConflict:#Project already exist
            print 'Project "%s" already exist' % projectName
            
    else :
        print """Database "%s" doesn't exist""" % dbname