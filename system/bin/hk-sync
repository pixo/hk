#!/usr/bin/env python
import badass.utils as utils
import argparse, os

"""Get patterns for ssh exclude"""
def get_sync_exclude ( sync_args ) :
    """ Add basic Syno systems garbages """
    result = list ( (".Trash-1000", "\#recycle") )
    
    """ Split string args to get a list """
    args = sync_args.split (",")

    if "all" in args :
        return result
    
    """ Get tasks code """
    at = utils.getAssetTasks ()
    tasks = list ()
    for k in at : tasks.append ( at [ k ] )

    """ Check args and return the task code to sync """
    result = tasks

    for a in args :
        """ append legal tasks """
        if a in tasks :
            result.remove ( a )

    return result

"""Synchronizing data via ssh"""
def hk_rsync_cmd ( source = "", destination = "", excludes = list (), dev = None ):
    """ Check if sync 'codes' or 'projects' directory """
    if dev and bool ( int ( dev ) ) :
        print "directory: codes\n"
        category = "codes"
        source = os.path.join ( source, category )
        destination = os.path.join ( destination ) 

    else:
        print "directory: projects\n"
        category = "projects"
        directory = utils.getProjectName ()
        source = os.path.join ( source, category, directory ) 
        destination = os.path.join ( destination, category )
    
    cmd = utils.rsync ( source = source, destination = destination, excludes = excludes )
    return cmd

"""Drive which data to Synchronizing"""
def hk_rsync ( sync, push, pull, dev ):

    # local_root = os.path.join ( os.getenv ( "HOME" ),  "homeworks" )
    local_root = utils.getLocalRoot ()
    host_root = utils.getHostRoot ()
    
    if sync :
        print "sync:", sync
        excludes = get_sync_exclude ( sync )
        """Pushing"""
        cmd = hk_rsync_cmd ( source = local_root, destination = host_root, excludes = excludes, dev = dev )
        # print cmd

        """Pulling"""
        cmd = hk_rsync_cmd ( source = host_root, destination = local_root, excludes = excludes, dev = dev )
        # print cmd

    if push :
        print "push:", push  
        excludes = get_sync_exclude ( push )
        """Pushing"""
        cmd = hk_rsync_cmd ( source = local_root, destination = host_root, excludes = excludes, dev = dev )
        # print cmd

    if pull :
        print "pull:", pull
        excludes = get_sync_exclude ( pull )
        """Pulling"""
        cmd = hk_rsync_cmd ( source = host_root, destination = local_root, excludes = excludes, dev = dev )
        # print cmd


if __name__ == '__main__':
    parser = argparse.ArgumentParser ()
    parser.add_argument ( "-sync", "--sync", default = "all", help = "push/pull data, default sync all" )
    parser.add_argument ( "-push", "--push", default = False, help = "commit data to server, default push all" )
    parser.add_argument ( "-pull", "--pull", default = False, help = "import data from server, default pull all" )
    parser.add_argument ( "-dev", "--dev", default = False, help = "set to 1 to sync your 'codes' folder should be use in conjunction of sync/push/pull, default codes is not sync" )

    args = parser.parse_args ()

    hk_rsync ( args.sync, args.push, args.pull, args.dev )